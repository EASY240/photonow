Implement New Blog Article
We need to integrate a new article into our blog. I have the article's complete HTML content (Master AI Photo Editing Prompts...html).

The goal is to create a new, route-able blog page component that follows the exact same structure as our other articles (like BestPhotoBackgroundEditors.tsx). This involves updating our central data file, creating the new component, porting the HTML to JSX, externalizing its CSS, and adding dynamic features like the Helmet and Table of Contents.

The Implementation Plan: Step-by-Step
Step 1: Update src/data/blogArticles.ts (Critical)
This is the most important step. Open src/data/blogArticles.ts and add the following new BlogArticle object to the blogArticles array. This will make the site aware of the new article.

Your Task: Add this object to src/data/blogArticles.ts:

TypeScript

{
  id: 'master-ai-photo-editing-prompts',
  title: 'Master AI Photo Editing Prompts: Create Stunning Images',
  description: 'Learn how to craft effective AI photo editing prompts that transform your images. Discover expert techniques for background removal, image expansion, and more with ModernPhotoTools.',
  image: 'https://storage.googleapis.com/48877118-7272-4a4d-b302-0465d8aa4548/c8ed49ab-fa6e-4f28-9ab8-ea4721bdeeef/f1611193-e19b-443a-93bc-dc7c7a4537b0.jpg',
  date: '2025-10-04',
  category: 'General', 
  tags: ['AI Prompts', 'Photo Editing', 'Prompt Engineering', 'AI Tools'],
  author:  Assuming the same author as other articles
  featured: true,
},
Step 2: Create New Article Component File
Now we'll create the React component for this article.

Your Task:

Create a new file at src/pages/blog/MasterAiPhotoEditingPrompts.tsx.

Use src/pages/blog/BestPhotoBackgroundEditors.tsx as a template. Copy its entire structure (imports, ArticleLayout, TableOfContents, Helmet, etc.) into the new file.

Step 3: Modify the New Component (MasterAiPhotoEditingPrompts.tsx)
This is where we'll add the new content and dynamic features.

Your Task:

Extract CSS:

Take the entire <style>...</style> block from the provided Master AI Photo Editing Prompts...html file.

Create a new CSS file at src/pages/blog/MasterAiPhotoEditingPrompts.css.

Paste all the CSS rules into this new file.

In MasterAiPhotoEditingPrompts.tsx, import this new stylesheet:

TypeScript

import './MasterAiPhotoEditingPrompts.css'; 
Update Helmet for SEO (Requests 2, 3, 4):

Find the <Helmet> section in your new file and replace it with this. It includes the correct title, meta description, and the FAQ schema.

TypeScript

<Helmet>
  <title>Master AI Photo Editing Prompts: Create Stunning Images | ModernPhotoTools</title>
  <meta
    name="description"
    content="Learn how to craft effective AI photo editing prompts that transform your images. Discover expert techniques for background removal, image expansion, and more with ModernPhotoTools."
  />
  <link rel="canonical" href="https://modernphototools.com/blog/master-ai-photo-editing-prompts" />

  {/* 4. Implement FAQ Schema */}
  <script type="application/ld+json">
    {`
    {
      "@context": "https://schema.org",
      "@type": "FAQPage",
      "mainEntity": [
        {
          "@type": "Question",
          "name": "Portrait Enhancement Prompts",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "Enhance this portrait with professional retouching. Improve skin texture while maintaining natural appearance, brighten eyes subtly, enhance hair definition, and add slight background blur for depth. Preserve original lighting mood and authentic expression."
          }
        },
        {
          "@type": "Question",
          "name": "Product Photography Prompts",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "Create professional product photo of this [product type] with clean white background, soft shadow beneath for grounding, and subtle reflection. Use professional product lighting setup with main light from upper right and fill light from left to highlight product features and texture."
          }
        },
        {
          "@type": "Question",
          "name": "Landscape Enhancement Prompts",
          "acceptedAnswer": {
            "@type": "Answer",
            "text": "Enhance this landscape photo with dramatic sky. Replace current sky with vibrant sunset featuring rich oranges and purples. Add subtle sun rays filtering through clouds. Maintain natural appearance of landscape elements while adjusting lighting to match new sky."
          }
        }
      ]
    }
    `}
  </script>
</Helmet>
Add Article Content (HTML to JSX):

Take the HTML content from the <body> of the Master AI Photo Editing Prompts...html file (the part inside <div class="styled-container">...</div>).

Paste this HTML inside the <ArticleLayout> component.

Convert it to JSX: You must run a "HTML to JSX" conversion on this content. This will fix all class to className, style attributes, etc.

Remove Static Elements: Delete the static <h1> from the pasted HTML. The ArticleLayout component will handle the title, date, and featured image dynamically using the data from blogArticles.ts.

Implement Table of Contents (Request 1):

The provided HTML is well-structured with <section id="..."> tags.

Inside your ArticleLayout component (where BestPhotoBackgroundEditors.tsx has its TOC), add the TableOfContents component.

You must create the headings prop for it by scraping the <h2> tags from your new content.

TypeScript

// Inside your MasterAiPhotoEditingPrompts component
const headings = [
  { id: 'introduction', title: 'Mastering AI Photo Editing Prompts', level: 1 }, // H1
  { id: 'understanding-ai-prompts', title: 'Understanding AI Photo Editing Prompts', level: 2 },
  { id: 'prompt-structure', title: 'The Anatomy of a Perfect AI Photo Editing Prompt', level: 2 },
  { id: 'tool-specific-prompts', title: 'Tool-Specific AI Photo Editing Prompts', level: 2 },
  { id: 'advanced-techniques', title: 'Advanced AI Prompt Techniques', level: 2 },
  { id: 'use-cases', title: 'Practical Use Cases for AI Photo Editing Prompts', level: 2 },
  { id: 'common-mistakes', title: 'Common AI Photo Editing Prompt Mistakes to Avoid', level: 2 },
  { id: 'tool-recommendations', title: 'Recommended Tools for Different Prompt Types', level: 2 },
  { id: 'prompt-library', title: 'AI Photo Editing Prompt Library', level: 2 },
  { id: 'conclusion', title: 'Mastering the Art of AI Photo Editing Prompts', level: 2 },
];

// ... inside the return()
<ArticleLayout article={article} headings={headings}>
  {/* ... your JSX-converted HTML content goes here ... */}
</ArticleLayout>
Step 4: Update Routing
Finally, add the route for the new page.

Your Task:

Open src/App.tsx.

Import your new component:

TypeScript

import { MasterAiPhotoEditingPrompts } from './pages/blog/MasterAiPhotoEditingPrompts';
Add the new route inside your <Routes>:

TypeScript

<Route 
  path="/blog/master-ai-photo-editing-prompts" 
  element={<MasterAiPhotoEditingPrompts />} 
/>
This plan fully integrates the new article, updates all necessary metadata, and respects the existing dynamic structure of your React application.